name: CI/CD Pipeline for TaskReporter Backend

on:
  push:
    branches:
      - main

jobs:
  lint-and-build:
    name: Lint, Format, and Build
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18" # Use the version your project needs

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Install ESLint and Prettier globally (optional but recommended)
      - name: Install ESLint and Prettier
        run: npm install eslint prettier --save-dev

      # Run lint and format
      - name: Lint and format
        run: npm run lint && npm run format

      # Docker build and push
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/taskreporter-backend:latest .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/taskreporter-backend:latest

  deploy:
    name: Deploy to AWS EC2
    runs-on: ubuntu-latest
    needs: lint-and-build

    steps:
      # SSH to EC2 and deploy
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Pull the latest Docker image
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/taskreporter-backend:latest

            # Update Docker Swarm service
            docker service update \
              --image ${{ secrets.DOCKER_HUB_USERNAME }}/taskreporter-backend:latest \
              --force taskreporter_app || \
            docker service create \
              --name taskreporter_app \
              --replicas 3 \
              --publish 80:80 \
              ${{ secrets.DOCKER_HUB_USERNAME }}/taskreporter-backend:latest

            # Verify the service status
            docker service ls
